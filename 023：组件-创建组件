1------------------------------------------------------------------------------------------------------------------------------
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <script src="js/vue.js"></script>
</head>

<body>
    <div id="app">
        <!-- 1.3 如果要使用组件，直接，把组件的名称，以 HTML 标签的形式，引入页面中，即可 -->
        <my-com1></my-com1>
    </div>
    <script>
        // //1.1 使用 Vue.extend 来创建全局的 Vue 组件
        // var com1 = Vue.extend({
        //     template: '<h3> Vue.extend 创建组件 </h3>'//通过 template 属性，指定了组件要展示的 HTML 结构
        // })
        // //1.2 使用 Vue.component('组件的名称'，创建出来的组件模板对象)
        // // 如果使用 Vue.component 定义全局组件的时候，组件名称使用了 驼峰命名，则在引用组件的时候，需要把 大写的驼峰改为小写的字母，同时，两个单词之间，使用 - 衔接
        // // 如果不使用驼峰，则直接拿名称来使用即可
        // Vue.component('myCom1', com1)

        // 合并写成：
        Vue.component('myCom1', Vue.extend({
            template: '<h3> Vue.extend 创建组件 </h3>'//通过 template 属性，指定了组件要展示的 HTML 结构
        }))


        var vm=new Vue({
           el:'#app',
           data: {},
           methods: {}
        });
    </script>
</body>

</html>


2------------------------------------------------------------------------------------------------------------------------------
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <script src="js/vue.js"></script>
</head>

<body>
    <div id="app">
        <mycom></mycom>
    </div>
    <script>
        Vue.component('mycom',{
            //注意：不论是哪种方式创建出来的组件，组件的 template 属性指向的模板内容，必须有且只能有唯一的根元素
            template: '<div><h3>直接使用 Vue.complate 创建出来的组件</h3></div>'
        })
        var vm=new Vue({
           el:'#app',
           data: {},
           methods: {}
        });
    </script>
</body>

</html>


3------------------------------------------------------------------------------------------------------------------------------
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <script src="js/vue.js"></script>
</head>

<body>
    <div id="app">
        <mycom></mycom>
    </div>

    <template id="tmp1">
        <div>
            <h1>这是通过 template 元素，在外部定义的组件结构，这个方式，有代码的智能提示和高亮</h1>
        </div>
    </template>
    
    <script>
        Vue.component('mycom',{
            template: '#tmp1'
        })
        var vm=new Vue({
           el:'#app',
           data: {},
           methods: {}
        });
    </script>
</body>

</html>
