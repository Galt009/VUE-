<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <script src="js/vue.js"></script>
</head>

<body>
    <div id="app">
        <com1 v-bind:parentmsg="msg"></com1>
    </div>
    <script>
        var vm=new Vue({
           el:'#app',
           data: {
               msg: '父组件'
           },
           methods: {},
           components: {
               //注意：组件中的所有的 props 中的数据，都是通过 父组件传递给子组件的
               com1: {
                //    data () {
                //        return {
                //            title: '123',
                //            content: 'abc'
                //        }
                //    },
                   data: function () { //注意：子组件中的 data 数据，并不是通过父组件传递过来的，而是子组件自身私有的，比如：子组件通过 Ajax ，请求回来的数据，都可以放到 data 身上；
                   //data 上的数据，都是可读可写的
                       return {
                           title: '123',
                           content: 'abc'
                       }
                   },
                   template: '<h1>这是子组件--{{ parentmsg }}</h1>',
                   //props 中的数据，都是只读的，无法重新赋值
                   props: ['parentmsg'],//把父组件传递过来的 parentmsg 属性，先在 props 数组中定义一下，才能使用这个数据

               }
           }
        });
    </script>
</body>

</html>
